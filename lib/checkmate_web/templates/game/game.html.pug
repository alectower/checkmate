h1  Checkmate

.board
  = for rank <- 7..0 do
    .rank
      = for file <- 1..8 do
        .file(
          id=file_id(rank, file)
          phx-click="move"
          phx-value-square=file_id(rank, file)
          phx-value-piece=Enum.at(@board.pieces, piece_position(rank, file)))
          = if not is_nil(Enum.at(@board.pieces, piece_position(rank, file))) do
            .piece(
              id=piece_id(@board, rank, file)
              phx-click="move"
              phx-value-square=file_id(rank, file)
              phx-value-piece=Enum.at(@board.pieces, piece_position(rank, file))
              class=selected_class(@selected, piece_position(rank, file))
              )= board_piece(@board, piece_position(rank, file)) |> piece_display()

.moves
  | Turn:
  = @turn |> to_string() |> String.capitalize()
  = if @check do
    = if Board.checkmate?(@board, @turn |> to_string() |> String.at(0)) do
      br
      | Checkmate!
    - else
      br
      | Check!
  - else
    br
  br
  br

  = for {[white, black], index} <- Enum.chunk_every(@moves, 2) |> Enum.with_index() do
    .move
      = "#{index + 1}."
      = "#{white}, #{black}"
